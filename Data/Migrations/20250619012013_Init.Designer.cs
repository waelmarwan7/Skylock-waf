// <auto-generated />
using System;
using Grad_Project_Dashboard_1.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Grad_Project_Dashboard_1.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250619012013_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Grad_Project_Dashboard_1.Models.CustomRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Regex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CustomRules");
                });

            modelBuilder.Entity("Grad_Project_Dashboard_1.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AIToggle")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPInstance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstanceGroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoadBalancerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetworkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Grad_Project_Dashboard_1.Models.UserCustomRule", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("CustomRuleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "CustomRuleId");

                    b.HasIndex("CustomRuleId");

                    b.ToTable("UserCustomRules");
                });

            modelBuilder.Entity("Grad_Project_Dashboard_1.Models.UserDomainName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Domain")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserDomainNames");
                });

            modelBuilder.Entity("Grad_Project_Dashboard_1.Models.UserCustomRule", b =>
                {
                    b.HasOne("Grad_Project_Dashboard_1.Models.CustomRule", "CustomRule")
                        .WithMany("UserCustomRules")
                        .HasForeignKey("CustomRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Grad_Project_Dashboard_1.Models.User", "User")
                        .WithMany("UserCustomRules")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomRule");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Grad_Project_Dashboard_1.Models.UserDomainName", b =>
                {
                    b.HasOne("Grad_Project_Dashboard_1.Models.User", "User")
                        .WithMany("DomainNames")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Grad_Project_Dashboard_1.Models.CustomRule", b =>
                {
                    b.Navigation("UserCustomRules");
                });

            modelBuilder.Entity("Grad_Project_Dashboard_1.Models.User", b =>
                {
                    b.Navigation("DomainNames");

                    b.Navigation("UserCustomRules");
                });
#pragma warning restore 612, 618
        }
    }
}
